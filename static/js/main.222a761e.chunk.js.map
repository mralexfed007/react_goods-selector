{"version":3,"sources":["App.js","index.js"],"names":["goodsFromServer","App","state","Jam","select","good","setState","prev","remove","reset","Object","keys","forEach","key","className","map","includes","type","onClick","this","length","index","arr","React","Component","ReactDOM","render","document","getElementById"],"mappings":"6OAGMA,G,MAAkB,CACtB,YACA,SACA,OACA,YACA,QACA,QACA,OACA,QACA,MACA,WA2GaC,E,4MAvGbC,MAAQ,CACNC,IAAK,I,EAGPC,OAAS,SAACC,GACR,EAAKC,UAAS,SAAAC,GAAI,kCACbA,GADa,kBAEfF,EAAOA,Q,EAKZG,OAAS,SAACH,UACD,EAAKH,MAAMG,GAClB,EAAKC,UAAS,SAAAC,GAAI,sBACbA,O,EAKPE,MAAQ,WACNC,OAAOC,KAAK,EAAKT,OAAOU,SAAQ,SAACC,UACxB,EAAKX,MAAMW,GAClB,EAAKP,UAAS,SAAAC,GAAI,sBACbA,U,4CAMT,WAAU,IAAD,OACP,OACE,yBAAKO,UAAU,OACb,4BACGd,EAAgBe,KAAI,SAAAV,GAAI,OACvB,wBACEQ,IAAKR,EACLS,UAAWJ,OAAOC,KAAK,EAAKT,OAAOc,SAASX,GACxC,WACA,IAEHA,EACCK,OAAOC,KAAK,EAAKT,OAAOc,SAASX,GAY/B,4BACEY,KAAK,SACLC,QAAS,WACP,EAAKV,OAAOH,KAHhB,UAVA,4BACEY,KAAK,SACLC,QAAS,WACP,EAAKd,OAAOC,KAHhB,eAsBV,4BACEY,KAAK,SACLC,QAAS,WACP,EAAKT,UAHT,SAQA,4BACGC,OAAOC,KAAKQ,KAAKjB,OAAOkB,OAAS,GAAKV,OAAOC,KAAKQ,KAAKjB,OACrDa,KAAI,SAACV,EAAMgB,EAAOC,GACjB,OAAID,IAAUC,EAAIF,OAAS,GAAoB,IAAfE,EAAIF,OAEhC,oCACG,QACAf,GAML,oCACGA,EACA,SAKRK,OAAOC,KAAKQ,KAAKjB,OAAOkB,OAAS,GAAK,gBACH,IAAnCV,OAAOC,KAAKQ,KAAKjB,OAAOkB,QAAgB,oBACL,IAAnCV,OAAOC,KAAKQ,KAAKjB,OAAOkB,QAAgB,oB,GAjGjCG,IAAMC,WCZxBC,IAASC,OACP,kBAAC,EAAD,MACAC,SAASC,eAAe,U","file":"static/js/main.222a761e.chunk.js","sourcesContent":["import React from 'react';\nimport './App.scss';\n\nconst goodsFromServer = [\n  'Dumplings',\n  'Carrot',\n  'Eggs',\n  'Ice cream',\n  'Apple',\n  'Bread',\n  'Fish',\n  'Honey',\n  'Jam',\n  'Garlic',\n];\n\nclass App extends React.Component {\n  state = {\n    Jam: '',\n  }\n\n  select = (good) => {\n    this.setState(prev => ({\n      ...prev,\n      [good]: good,\n    }\n    ));\n  }\n\n  remove = (good) => {\n    delete this.state[good];\n    this.setState(prev => ({\n      ...prev,\n    }\n    ));\n  }\n\n  reset = () => {\n    Object.keys(this.state).forEach((key) => {\n      delete this.state[key];\n      this.setState(prev => ({\n        ...prev,\n      }\n      ));\n    });\n  }\n\n  render() {\n    return (\n      <div className=\"App\">\n        <ul>\n          {goodsFromServer.map(good => (\n            <li\n              key={good}\n              className={Object.keys(this.state).includes(good)\n                ? 'selected'\n                : ''}\n            >\n              {good}\n              {!Object.keys(this.state).includes(good)\n                ? (\n                  <button\n                    type=\"button\"\n                    onClick={() => {\n                      this.select(good);\n                    }}\n                  >\n                    Select\n                  </button>\n                )\n                : (\n                  <button\n                    type=\"button\"\n                    onClick={() => {\n                      this.remove(good);\n                    }}\n                  >\n                    Remove\n                  </button>\n                )}\n            </li>\n          ))}\n        </ul>\n        <button\n          type=\"button\"\n          onClick={() => {\n            this.reset();\n          }}\n        >\n          Reset\n        </button>\n        <h1>\n          {Object.keys(this.state).length > 0 && Object.keys(this.state)\n            .map((good, index, arr) => {\n              if (index === arr.length - 1 && arr.length !== 1) {\n                return (\n                  <>\n                    {' and '}\n                    {good}\n                  </>\n                );\n              }\n\n              return (\n                <>\n                  {good}\n                  {', '}\n                </>\n              );\n            })\n            }\n          {Object.keys(this.state).length > 1 && ' are selected'}\n          {Object.keys(this.state).length === 0 && 'No goods selected'}\n          {Object.keys(this.state).length === 1 && 'is selected'}\n        </h1>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}
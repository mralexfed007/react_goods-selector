{"version":3,"sources":["App.js","index.js"],"names":["goodsFromServer","App","state","goods","Jam","select","good","copy","setState","prev","remove","reset","prepareString","index","arr","length","className","map","key","Object","keys","includes","type","onClick","this","React","Component","ReactDOM","render","document","getElementById"],"mappings":"sOAGMA,G,MAAkB,CACtB,YACA,SACA,OACA,YACA,QACA,QACA,OACA,QACA,MACA,WAgHaC,E,4MA5GbC,MAAQ,CACNC,MAAO,CACLC,IAAK,Q,EAITC,OAAS,SAACC,GACR,IAAMC,EAAI,eAAQ,EAAKL,MAAMC,OAE7BI,EAAKD,GAAQA,EAEb,EAAKE,UAAS,SAAAC,GAAI,kCACbA,GADa,IAEhBN,MAAOI,Q,EAIXG,OAAS,SAACJ,GACR,IAAMC,EAAI,eAAQ,EAAKL,MAAMC,cAEtBI,EAAKD,GACZ,EAAKE,UAAS,SAAAC,GAAI,kCACbA,GADa,IAEhBN,MAAOI,Q,EAIXI,MAAQ,WACN,EAAKH,UAAS,SAAAC,GAAI,kCACbA,GADa,IAEhBN,MAAO,S,EAIXS,cAAgB,SAACN,EAAMO,EAAOC,GAAd,OACbD,IAAUC,EAAIC,OAAS,GAAoB,IAAfD,EAAIC,OAE7B,oCACG,QACAT,GAIH,oCACGA,EACA,O,4CAKT,WAAU,IAAD,OACP,OACE,yBAAKU,UAAU,OACb,4BACGhB,EAAgBiB,KAAI,SAAAX,GAAI,OACvB,wBACEY,IAAKZ,EACLU,UAAWG,OAAOC,KAAK,EAAKlB,MAAMC,OAAOkB,SAASf,GAC9C,WACA,IAEHA,EACCa,OAAOC,KAAK,EAAKlB,MAAMC,OAAOkB,SAASf,GAYrC,4BACEgB,KAAK,SACLC,QAAS,WACP,EAAKb,OAAOJ,KAHhB,UAVA,4BACEgB,KAAK,SACLC,QAAS,WACP,EAAKlB,OAAOC,KAHhB,eAsBV,4BACEgB,KAAK,SACLC,QAAS,WACP,EAAKZ,UAHT,SAQA,4BACGQ,OAAOC,KAAKI,KAAKtB,MAAMC,OAAOY,OAAS,GACrCI,OAAOC,KAAKI,KAAKtB,MAAMC,OACvBc,IAAIO,KAAKZ,eAEXO,OAAOC,KAAKI,KAAKtB,MAAMC,OAAOY,OAAS,GAAK,gBACH,IAAzCI,OAAOC,KAAKI,KAAKtB,MAAMC,OAAOY,QAAgB,oBACL,IAAzCI,OAAOC,KAAKI,KAAKtB,MAAMC,OAAOY,QAAgB,oB,GAtGvCU,IAAMC,WCZxBC,IAASC,OACP,kBAAC,EAAD,MACAC,SAASC,eAAe,U","file":"static/js/main.cb3c3395.chunk.js","sourcesContent":["import React from 'react';\nimport './App.scss';\n\nconst goodsFromServer = [\n  'Dumplings',\n  'Carrot',\n  'Eggs',\n  'Ice cream',\n  'Apple',\n  'Bread',\n  'Fish',\n  'Honey',\n  'Jam',\n  'Garlic',\n];\n\nclass App extends React.Component {\n  state = {\n    goods: {\n      Jam: 'Jam',\n    },\n  }\n\n  select = (good) => {\n    const copy = { ...this.state.goods };\n\n    copy[good] = good;\n\n    this.setState(prev => ({\n      ...prev,\n      goods: copy,\n    }));\n  }\n\n  remove = (good) => {\n    const copy = { ...this.state.goods };\n\n    delete copy[good];\n    this.setState(prev => ({\n      ...prev,\n      goods: copy,\n    }));\n  }\n\n  reset = () => {\n    this.setState(prev => ({\n      ...prev,\n      goods: {},\n    }));\n  }\n\n  prepareString = (good, index, arr) => (\n    (index === arr.length - 1 && arr.length !== 1)\n      ? (\n        <>\n          {' and '}\n          {good}\n        </>\n      )\n      : (\n        <>\n          {good}\n          {', '}\n        </>\n      )\n  )\n\n  render() {\n    return (\n      <div className=\"App\">\n        <ul>\n          {goodsFromServer.map(good => (\n            <li\n              key={good}\n              className={Object.keys(this.state.goods).includes(good)\n                ? 'selected'\n                : ''}\n            >\n              {good}\n              {!Object.keys(this.state.goods).includes(good)\n                ? (\n                  <button\n                    type=\"button\"\n                    onClick={() => {\n                      this.select(good);\n                    }}\n                  >\n                    Select\n                  </button>\n                )\n                : (\n                  <button\n                    type=\"button\"\n                    onClick={() => {\n                      this.remove(good);\n                    }}\n                  >\n                    Remove\n                  </button>\n                )}\n            </li>\n          ))}\n        </ul>\n        <button\n          type=\"button\"\n          onClick={() => {\n            this.reset();\n          }}\n        >\n          Reset\n        </button>\n        <h1>\n          {Object.keys(this.state.goods).length > 0\n          && Object.keys(this.state.goods)\n            .map(this.prepareString)\n            }\n          {Object.keys(this.state.goods).length > 1 && ' are selected'}\n          {Object.keys(this.state.goods).length === 0 && 'No goods selected'}\n          {Object.keys(this.state.goods).length === 1 && 'is selected'}\n        </h1>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}